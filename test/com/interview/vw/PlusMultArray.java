package com.interview.vw;

import static org.junit.Assert.assertEquals;
import java.util.Arrays;
import java.util.List;
import org.junit.Test;

public class PlusMultArray {
    public String plusMult(List<Integer> A) {
        long even = A.get(0), odd = A.get(1);
        for (int i = 2; i < A.size(); ++i) {
            int num = A.get(i);
            if ((i / 2) % 2 == 1) {
                if (i % 2 == 0) {
                    even = ((even % 2) * (num % 2)) % 2;
                } else {
                    odd = ((odd % 2) * (num % 2)) % 2;
                }
            } else {
                if (i % 2 == 0) {
                    even = ((even % 2) + (num % 2)) % 2;
                } else {
                    odd = ((odd % 2) + (num % 2)) % 2;
                }
            }
        }
        if (even > odd) {
            return "EVEN";
        } else if (even < odd) {
            return "ODD";
        } else {
            return "NEUTRAL";
        }
    }

    @Test
    public void test5() {
        int i = -1;
        System.out.println(i % 2);
    }

    @Test
    public void test0() {
        List<Integer> arr = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9);
        assertEquals("EVEN", plusMult(arr));
    }

    @Test
    public void test1() {
        List<Integer> arr = Arrays.asList(1, 2, 3, 4);
        assertEquals("EVEN", plusMult(arr));

    }

    @Test
    public void test2() {
        List<Integer> arr = Arrays.asList(11, -7, -25, 1, 42, 45, -39, -23, -16, 18, -34, 44, -35,
                -28, 18, -13, 25, -45, -46, -4, 29, -39, 27, -13, -12, 33, 40, -34, 14, 44, -11, 39,
                1, -37, -11, 2, -40, -47, -15, 2, 17, 3, 33, -46, -35, 5, -17, -47, 38, 2, 9, 45,
                -34, -45, -19, -3, -1, 36, -45, 21, 49, -9, 24, -46, 31, -47, 30, 6, -28, 36, -12,
                29, -9, -10, 28, -7, 29, -41, -37, 16, 43, -28, 35, 23, 21, 33, -37, -36, 7, -14,
                -34, 13, -22, -39, 14, 38, 32, -49, -30, 35, 5, 19, 46, 38, -3, 35, -13, 1, 12, -34,
                -29);

        assertEquals("ODD", plusMult(arr));
    }

    @Test
    public void test4() {
        List<Integer> arr = Arrays.asList(-717, -196, 948, 1232, -1293, 853, 430, 25, -808, -302,
                -1387, -483, 1089, 1494, -202, -1479, 189, -1441, -240, -1068, 1491, -604, 35, 1230,
                -798, 519, -1395, 459, 861, 977, 62, 698, -1178, -924, -1449, -1477, -1270, 149,
                -861, -999, 530, 673, -1454, 286, 592, -1151, 1093, -881, 54, 459, 1128, 458, 277,
                20, 479, 102, 825, -809, -302, 1351, -1023, -312, -1390, 3, -455, 1144, -827, 557,
                -614, 1370, -779, 515, 1294, 1449, 720, -672, 671, 108, -211, 376, -919, 1339, -775,
                131, -564, 1037, -250, 1276, 158, 251, -403, -360, 239, -805, -940, -202, -902,
                -1012, -1445, 1230, -158, -217, -471, -424, -1428, 870, 1306, 569, 19, 174, 1259,
                -153, 1153, -199, 1002, 529, 1371, -1091, -50, -1244, -743, 901, 1170, 315, -697,
                -169, 1030, -1421, -46, 1443, -832, -370, -643, -249, 577, -60, -1499, -441, 948,
                -33, -1037, 205, -1212, -100, -570, 390, 1381, -884, 930, 194, -769, 1004, 1085,
                -1127, -452, 9, 410, -26, 1011, 20, 713, 293, 814, -950, -1433, 395, -465, 1004,
                1341, 26, 1430, 1081, -935, -232, -717, -34, -96, 1151, -368, -1154, 953, -1414,
                1401, -1086, -764, 607, 188, -287, 525, 596, -1171, 1006, -1356, -364, -162, 1115,
                115, 405, -858, 42, -571, -84, 77, 380, 1299, 250, 601, 1171, -1404, 1267, -1374,
                -191, -979, 496, 686, 483, -651, -1141, -366, -218, 372, -1252, 834, -871, -1061,
                -1039, -1299, -58, -1010, -1033, -210, 262, -386, -22, 485, 534, -523, -523, 383,
                167, 70, -1483, -782, -167, 934, -215, -1498, -768, -1346, 503, -144, 1077, 233,
                160, -1408, 1323, 1472, 686, 19, 1068, -967, 1086, -14, 605, 1364, 1240, -1323,
                1129, -604, -126, -559, -1167, 1376, -50, 745, 622, -418, 1419, 1142, -137, -980,
                -1484, -147, 396, -646, -317, -1180, 330, 85, 1200, 1285, 1074, 665, 465, 1088, 410,
                1261, 1182, 124, -277, 443, 1495, -406, -851, 107, -270, -985, 13, -1009, 79, 1151,
                955, -506, 1440, -268, -1006, -196, 607, -616, -1169, -42, -556, 522, 1196, -904,
                -221, -1379, -957, 306, -877, -88, -668, -1136, 1471, 278, 479, -841, -50, -1082,
                -258, 1057, 833, -586, 808, 1, 1338, -461, 591, -817, 342, -155, -470, -437, -349,
                918, 789, -407, 1092, 1259, -1023, 496, 493, 373, 614, -777, -350, -900, -1439,
                -755, -938, -1280, 786, 979, 535, -1327, -46, 960, -1305, -39, -728, -1084, -813,
                -1010, 268, 101, 1346, 721, 489, 1113, 559, 1318, -1419, -397, -876, -1396, -95,
                1249, -428, 1169, -796, 915, 680, -279, 79, -1062, -300, -1375, 331, -1094, -670,
                1471, -937, -15, -833, -1458, 544, -1409, 531, 32, -763, -1477, -384, -164, -543,
                -440, 604, 1128, -808, 25, -47, -446, 335, -1076, -760, 531, -224, -753, 1053, 145,
                -184, -1126, 1019, -681, -230, -862, 1285, 645, -774, -572, -152, 104, 454, 264,
                -665, -1222, -425, -715, -528, -393, 214, 1464, -1145, 857, -611, 478, 451, -40,
                -958, -959, 574, -767, -1030, 1090, -234, -1341, 151, -1414, 672, 878, -1478, -433,
                -267, 1142, -1329, -348, -1377, -23, 775, 272, 824, 662, -581, -1107, -299, -590,
                996, -143, -1359, -659, -1212, 345, 1046, 378, 1249, -1124, -44, -670, 332, -789,
                -1160, -921, 1264, -766, -293, -93, -624, -508, -923, 12, 527, -914, -1037, 350, 39,
                -1473, -776, 687, -1221, -672, -1473, 1382, -665, 629, 102, 1424, 719, 770, -70,
                730, -33, 233, 1125, -1296, -1378, -575, -551, -451, 92, -724, -677, 1334, -890,
                496, -126, -117, -115, -861, 576, -1346, 1430, -43, 1208, -647, 1281, -1378, 1371,
                -453, 863, -1271, -874, 224, 1191, -917, -1204, -576, 1246, -384, -813, -1046, 50,
                -1477, -535, 138, 890, -1222, 1016, -659, -1292, -139, 1481, -1215, 723, -404, 456,
                -129, 1367, -809, -1025, 913, 200, -366, 1005, 1294, 967, 235, -1337, 685, 26, 42,
                -351, -1346, -926, -43, 457, 1371, 422, -1440, -142, 509, -47, 547, -101, -1192,
                -200, -1376, 128, 1039, -108, -1081, 1327, 450, 387, -589, 44, 1313, -793, -96, 815,
                -191, -1152, 1013, -981, -753, 305, 289, 519, 78, -294, -943, -994, 1333, -904,
                -1492, -1423, 718, -16, -844, 707, 418, 625, 95, -176, 704, -267, -1062, 154, -1188,
                -419, 228, 1332, 1108, 383, -1178, -1111, 900, 476, 1472, 956, 193, 773, -259, -667,
                -1227, 1476, 1343, 854, -76, 918, 256, -789, -937, -1015, 1289, -156, 604, 420,
                -1297, 123, 152, -960, 467, -1022, 687, -845, 129, 288, -444, -981, 538, 713, -340,
                133, 1457, -407, -11, 15, 1232, 773, 1187, -1302, 923, 135, 1193, 399, 938, -1081,
                -170, 203, 490, -1416, -1064, -441, 63, 516, -1219, 1084, 1467, 746, 369, -159,
                -413, 485, 632, 705, -1434, -1158, 31, -1457, -1346, 71, -909, -250, -310, 1212,
                1004, -471, -946, -43, -1304, -802, 1317, -718, 705, 1347, 1468, 1482, 328, -1111,
                98, 1451, -279, -1195, -305, 1272, 461, -1417, 221, 606, 951, -972, 229, 206, 830,
                586, -337, -245, -709, 1043, 647, 459, 1091, 779, -234, 479, -1073, 167, -637, 675,
                -766, 945, -1029, 1148, -696, 163, -998, -1419, -801, 849, 271, 732, 554, -505, 73,
                742, -569, 1415, -677, 764, 463, 91, -601, 116, -92, -615, -271, 1470, 1182, -942,
                -1328, 484, -717, 666, 670, 1409, -857, 1080, -1150, 1168, -504, -271, 1265, -352,
                36, -1331, -22, 902, 71, -1174, -1046, 145, 1033, 1306, -389, -222);

        assertEquals("EVEN", plusMult(arr));
    }
}
